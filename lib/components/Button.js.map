{"version":3,"sources":["../../src/components/Button.js"],"names":["Button","props","icon","iconPosition","iconClassNames","button__icon","iconElement","Icon","require","default","cloneElement","className","color","size","buttonClassNames","button","onClick","renderButtonIcon","children","content","propTypes","oneOfType","string","element","node","object","oneOf","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,M;;;;;;;;;;;uCA8Be;AAAA,mBACc,KAAKC,KADnB;AAAA,UACTC,IADS,UACTA,IADS;AAAA,UACHC,YADG,UACHA,YADG;;;AAGjB,UAAMC,iBAAiB,0BAAG;AACxBC,sBAAc,IADU;AAExB,+BAAuBF,iBAAiB;AAFhB,OAAH,CAAvB;;AAKA,UAAIG,cAAc,IAAlB;AACA,UAAIJ,IAAJ,EAAU;AACR,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACA,cAAMK,OAAOC,QAAQ,QAAR,EAAkBC,OAA/B;AACAH,wBAAc,8BAAC,IAAD,IAAM,MAAMJ,IAAZ,EAAkB,WAAWE,cAA7B,GAAd;AACD,SAJD,MAIO;AACLE,wBAAc,gBAAMI,YAAN,CACZ,KAAKT,KAAL,CAAWC,IADC,EAEZ,EAAES,WAAWP,cAAb,EAFY,CAAd;AAID;AACF;AACD,aAAOE,WAAP;AACD;;;6BAEQ;AAAA;;AAAA,oBACiB,KAAKL,KADtB;AAAA,UACCW,KADD,WACCA,KADD;AAAA,UACQC,IADR,WACQA,IADR;;;AAGP,UAAMC,mBAAmB;AACvBC,gBAAQ;AADe,2CAEXH,KAFW,EAED,CAAC,CAACA,KAFD,qCAGXC,IAHW,EAGF,CAAC,CAACA,IAHA,QAAzB;;AAMA,aACE;AAAA;AAAA,UAAQ,WAAWC,gBAAnB,EAAqC,SAAS,KAAKb,KAAL,CAAWe,OAAzD;AACG,aAAKC,gBAAL,EADH;AAEE;AAAA;AAAA,YAAM,WAAU,iBAAhB;AAAmC,eAAKhB,KAAL,CAAWiB,QAAX,IAAuB,KAAKjB,KAAL,CAAWkB;AAArE;AAFF,OADF;AAMD;;;;;;AArEGnB,M,CACGoB,S,GAAY;AACjBD,WAAS,oBAAUE,SAAV,CAAoB,CAC3B,oBAAUC,MADiB,EAE3B,oBAAUC,OAFiB,CAApB,CADQ;AAKjBL,YAAU,oBAAUM,IALH;AAMjBtB,QAAM,oBAAUmB,SAAV,CAAoB,CACxB,oBAAUC,MADc,EAExB,oBAAUC,OAFc,EAGxB,oBAAUE,MAHc,CAApB,CANW;AAWjBtB,gBAAc,oBAAUuB,KAAV,CAAgB,CAC5B,MAD4B,EACpB,OADoB,CAAhB,CAXG;AAcjBb,QAAM,oBAAUS,MAdC;AAejBV,SAAO,oBAAUU,MAfA;AAgBjBN,WAAS,oBAAUW;AAhBF,C;AADf3B,M,CAoBG4B,Y,GAAe;AACpBT,WAAS,EADW;AAEpBD,YAAU,IAFU;AAGpBhB,QAAM,EAHc;AAIpBC,gBAAc,OAJM;AAKpBU,QAAM,EALc;AAMpBD,SAAO,EANa;AAOpBI,WAAS,mBAAM,CAAE;AAPG,C;kBAoDThB,M","file":"Button.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    content: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    children: PropTypes.node,\n    icon: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n      PropTypes.object,\n    ]),\n    iconPosition: PropTypes.oneOf([\n      'left', 'right',\n    ]),\n    size: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n  }\n\n  static defaultProps = {\n    content: '',\n    children: null,\n    icon: '',\n    iconPosition: 'right',\n    size: '',\n    color: '',\n    onClick: () => {},\n  }\n\n  renderButtonIcon() {\n    const { icon, iconPosition } = this.props;\n\n    const iconClassNames = cx({\n      button__icon: true,\n      'button__icon--right': iconPosition === 'right',\n    });\n\n    let iconElement = null;\n    if (icon) {\n      if (typeof icon === 'string') {\n        // eslint-disable-next-line\n        const Icon = require('./Icon').default;\n        iconElement = <Icon name={icon} className={iconClassNames} />;\n      } else {\n        iconElement = React.cloneElement(\n          this.props.icon,\n          { className: iconClassNames },\n        );\n      }\n    }\n    return iconElement;\n  }\n\n  render() {\n    const { color, size } = this.props;\n\n    const buttonClassNames = cx({\n      button: true,\n      [`button--${color}`]: !!color,\n      [`button--${size}`]: !!size,\n    });\n\n    return (\n      <button className={buttonClassNames} onClick={this.props.onClick}>\n        {this.renderButtonIcon()}\n        <span className=\"button__content\">{this.props.children || this.props.content}</span>\n      </button>\n    );\n  }\n}\n\nexport default Button;\n"]}