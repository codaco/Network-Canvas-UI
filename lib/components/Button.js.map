{"version":3,"sources":["../../src/components/Button.js"],"names":["renderButtonIcon","icon","iconPosition","iconClassNames","button__icon","iconElement","Icon","require","default","cloneElement","className","Button","props","color","size","children","content","onClick","rest","buttonClassNames","button","propTypes","oneOfType","string","element","node","object","oneOf","func","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,OAA4B;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AACnD,MAAMC,iBAAiB,0BAAG;AACxBC,kBAAc,IADU;AAExB,2BAAuBF,iBAAiB;AAFhB,GAAH,CAAvB;;AAKA,MAAIG,cAAc,IAAlB;AACA,MAAIJ,IAAJ,EAAU;AACR,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACA,UAAMK,OAAOC,QAAQ,QAAR,EAAkBC,OAA/B;AACAH,oBAAc,8BAAC,IAAD,IAAM,MAAMJ,IAAZ,EAAkB,WAAWE,cAA7B,GAAd;AACD,KAJD,MAIO;AACLE,oBAAc,gBAAMI,YAAN,CACZR,IADY,EAEZ,EAAES,WAAWP,cAAb,EAFY,CAAd;AAID;AACF;AACD,SAAOE,WAAP;AACD,CApBD;;IAsBMM,M;;;;;;;;;;;6BA8BK;AAAA;;AAAA,mBAUH,KAAKC,KAVF;AAAA,UAELC,KAFK,UAELA,KAFK;AAAA,UAGLC,IAHK,UAGLA,IAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,OALK,UAKLA,OALK;AAAA,UAMLC,OANK,UAMLA,OANK;AAAA,UAOLhB,IAPK,UAOLA,IAPK;AAAA,UAQLC,YARK,UAQLA,YARK;AAAA,UASFgB,IATE;;AAYP,UAAMC,mBAAmB;AACvBC,gBAAQ;AADe,2CAEXP,KAFW,EAED,CAAC,CAACA,KAFD,qCAGXC,IAHW,EAGF,CAAC,CAACA,IAHA,QAAzB;;AAMA,aACE;AAAA;AAAA,mBAAQ,WAAWK,gBAAnB,EAAqC,SAASF,OAA9C,IAA2DC,IAA3D;AACGlB,yBAAiB,EAAEC,UAAF,EAAQC,0BAAR,EAAjB,CADH;AAEE;AAAA;AAAA,YAAM,WAAU,iBAAhB;AAAmCa,sBAAYC;AAA/C;AAFF,OADF;AAMD;;;;;;AAtDGL,M,CACGU,S,GAAY;AACjBL,WAAS,oBAAUM,SAAV,CAAoB,CAC3B,oBAAUC,MADiB,EAE3B,oBAAUC,OAFiB,CAApB,CADQ;AAKjBT,YAAU,oBAAUU,IALH;AAMjBxB,QAAM,oBAAUqB,SAAV,CAAoB,CACxB,oBAAUC,MADc,EAExB,oBAAUC,OAFc,EAGxB,oBAAUE,MAHc,CAApB,CANW;AAWjBxB,gBAAc,oBAAUyB,KAAV,CAAgB,CAC5B,MAD4B,EACpB,OADoB,CAAhB,CAXG;AAcjBb,QAAM,oBAAUS,MAdC;AAejBV,SAAO,oBAAUU,MAfA;AAgBjBN,WAAS,oBAAUW;AAhBF,C;AADfjB,M,CAoBGkB,Y,GAAe;AACpBb,WAAS,EADW;AAEpBD,YAAU,IAFU;AAGpBd,QAAM,EAHc;AAIpBC,gBAAc,OAJM;AAKpBY,QAAM,EALc;AAMpBD,SAAO,EANa;AAOpBI,WAAS,mBAAM,CAAE;AAPG,C;kBAqCTN,M","file":"Button.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst renderButtonIcon = ({ icon, iconPosition }) => {\n  const iconClassNames = cx({\n    button__icon: true,\n    'button__icon--right': iconPosition === 'right',\n  });\n\n  let iconElement = null;\n  if (icon) {\n    if (typeof icon === 'string') {\n      // eslint-disable-next-line\n      const Icon = require('./Icon').default;\n      iconElement = <Icon name={icon} className={iconClassNames} />;\n    } else {\n      iconElement = React.cloneElement(\n        icon,\n        { className: iconClassNames },\n      );\n    }\n  }\n  return iconElement;\n};\n\nclass Button extends Component {\n  static propTypes = {\n    content: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    children: PropTypes.node,\n    icon: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n      PropTypes.object,\n    ]),\n    iconPosition: PropTypes.oneOf([\n      'left', 'right',\n    ]),\n    size: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n  }\n\n  static defaultProps = {\n    content: '',\n    children: null,\n    icon: '',\n    iconPosition: 'right',\n    size: '',\n    color: '',\n    onClick: () => {},\n  }\n\n  render() {\n    const {\n      color,\n      size,\n      children,\n      content,\n      onClick,\n      icon,\n      iconPosition,\n      ...rest\n    } = this.props;\n\n    const buttonClassNames = cx({\n      button: true,\n      [`button--${color}`]: !!color,\n      [`button--${size}`]: !!size,\n    });\n\n    return (\n      <button className={buttonClassNames} onClick={onClick} {...rest}>\n        {renderButtonIcon({ icon, iconPosition })}\n        <span className=\"button__content\">{children || content}</span>\n      </button>\n    );\n  }\n}\n\nexport default Button;\n"]}