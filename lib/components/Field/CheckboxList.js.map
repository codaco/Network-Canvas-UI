{"version":3,"sources":["../../../src/components/Field/CheckboxList.js"],"names":["CheckboxList","onClickOption","option","props","input","value","onChange","indexOf","label","options","meta","name","checks","memo","invalid","error"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA;;;IAGMA,Y;;;;;;;;;;;;;;kMAEJC,a,GAAgB,UAACC,MAAD,EAAY;AAAA,8BACE,MAAKC,KAAL,CAAWC,KADb;AAAA,UAClBC,KADkB,qBAClBA,KADkB;AAAA,UACXC,QADW,qBACXA,QADW;;;AAG1B,UAAID,MAAME,OAAN,CAAcL,MAAd,MAA0B,CAAC,CAA/B,EAAkC;AAChCI,iBAAS,iDAAWD,KAAX,IAAkBH,MAAlB,GAAT;AACD,OAFD,MAEO;AACLI,iBAAS,qBAAQD,KAAR,EAAeH,MAAf,CAAT;AACD;AACF,K;;;;;6BAEQ;AAAA,mBACkD,KAAKC,KADvD;AAAA,UACCK,KADD,UACCA,KADD;AAAA,UACQC,OADR,UACQA,OADR;AAAA,UACiBC,IADjB,UACiBA,IADjB;AAAA,gCACuBN,KADvB;AAAA,UACgCO,IADhC,gBACgCA,IADhC;AAAA,UACsCN,KADtC,gBACsCA,KADtC;;;AAGP,UAAMO,SAAS,oBACbH,OADa,EAEb,UAACI,IAAD,EAAOX,MAAP;AAAA,4BAAwBW,IAAxB,sBAA+BX,MAA/B,EAAwCG,MAAME,OAAN,CAAcL,MAAd,MAA0B,CAAC,CAAnE;AAAA,OAFa,EAGb,EAHa,CAAf;;AAMA,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAMM;AAAN,SADF;AAEE,8DAAY,MAAMG,IAAlB,EAAwB,SAASC,MAAjC,EAAyC,eAAe,KAAKX,aAA7D,GAFF;AAGGS,aAAKI,OAAL,IACC;AAAA;AAAA;AAAMJ,eAAKK;AAAX;AAJJ,OADF;AAQD;;;;;;kBAGYf,Y","file":"CheckboxList.js","sourcesContent":["import React, { Component } from 'react';\nimport { fromPairs, map, reduce, sortBy, without, zip } from 'lodash';\nimport Checkboxes from './Checkboxes';\n\n/**\n  * A checkbox list that sets thes field value to a list of selected options\n  */\nclass CheckboxList extends Component {\n\n  onClickOption = (option) => {\n    const { value, onChange } = this.props.input;\n\n    if (value.indexOf(option) === -1) {\n      onChange(sortBy([...value, option]));\n    } else {\n      onChange(without(value, option));\n    }\n  }\n\n  render() {\n    const { label, options, meta, input: { name, value } } = this.props;\n\n    const checks = reduce(\n      options,\n      (memo, option) => ({ ...memo, [option]: value.indexOf(option) !== -1 }),\n      {},\n    );\n\n    return (\n      <div>\n        <div>{label}</div>\n        <Checkboxes name={name} options={checks} onClickOption={this.onClickOption} />\n        {meta.invalid &&\n          <div>{meta.error}</div>}\n      </div>\n    );\n  }\n}\n\nexport default CheckboxList;\n"]}