{"version":3,"sources":["../../../src/components/Inputs/TextInput.js"],"names":["TextInput","handleKeyDown","e","props","isNumericOnly","metaKey","key","which","test","String","fromCharCode","preventDefault","onKeyDown","className","errorText","tooltip","name","label","onChange","hasFocus","placeholder","value","type","rest","showPlaceholder","propTypes","string","node","disabled","bool","func","any"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;+eANA;;IAQMA,S;;;;;;;;;;;;;;4LAiBJC,a,GAAgB,UAACC,CAAD,EAAO;AACrB,UAAI,MAAKC,KAAL,CAAWC,aAAf,EAA8B;AAC5B,YAAI,EACFF,EAAEG,OAAF,IAAa;AACbH,UAAEI,GAAF,IAAS,CAAC,YAAD,EAAe,WAAf,CADT,IACwC;AACxCJ,UAAEK,KAAF,KAAY,CAFZ,IAEiB;AACjB,gBAAQC,IAAR,CAAaC,OAAOC,YAAP,CAAoBR,EAAEK,KAAtB,CAAb,CAJE,CAIyC;AAJzC,SAAJ,EAKG;AACDL,YAAES,cAAF;AACD;AACF;AACD,UAAI,MAAKR,KAAL,CAAWS,SAAf,EAA0B;AACxB,cAAKT,KAAL,CAAWS,SAAX,CAAqBV,CAArB;AACD;AACF,K;;;;;6BAEQ;AAAA,mBAcH,KAAKC,KAdF;AAAA,UAELU,SAFK,UAELA,SAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,OAJK,UAILA,OAJK;AAAA,UAKLC,IALK,UAKLA,IALK;AAAA,UAMLC,KANK,UAMLA,KANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLd,aARK,UAQLA,aARK;AAAA,UASLe,QATK,UASLA,QATK;AAAA,UAULC,WAVK,UAULA,WAVK;AAAA,UAWLC,KAXK,UAWLA,KAXK;AAAA,UAYLC,IAZK,UAYLA,IAZK;AAAA,UAaFC,IAbE;;AAgBP,UAAMC,kBAAmBL,YAAY,CAACE,KAAd,GAAuBD,WAAvB,GAAqC,IAA7D;;AAEA,aACE;AAAA;AAAA,UAAK,WAAU,kCAAf;AACE;AACE,qBAAW,0BAAG,CAAC,MAAD,EAASP,SAAT,CAAH,CADb;AAEE,gBAAMG,IAFR;AAGE,gBAAMM,IAHR;AAIE,oBAAUJ,QAJZ;AAKE,qBAAW,KAAKjB,aALlB;AAME,uBAAauB,eANf;AAOE,iBAAOH;AAPT,WAQME,IARN,EADF;AAWGD,iBAAS,QAAT,IAAqB;AACpB,qBAAW,aADS;AAEpB,kBAAQ,CAAC,CAACD,KAFU;AAGpB,gBAAML,IAHc;AAIpB,iBAAOC,KAJa;AAKpB,qBAAWH,SALS;AAMpB,mBAASC;AANW;AAXxB,OADF;AAsBD;;;;;;AAzEGf,S,CACGyB,S,GAAY;AACjBZ,aAAW,oBAAUa,MADJ;AAEjBZ,aAAW,oBAAUa,IAFJ;AAGjBZ,WAAS,oBAAUW,MAHF;AAIjBE,YAAU,oBAAUC,IAJH;AAKjBb,QAAM,oBAAUU,MALC;AAMjBtB,iBAAe,oBAAUyB,IANR;AAOjBZ,SAAO,oBAAUS,MAPA;AAQjBP,YAAU,oBAAUU,IARH;AASjBX,YAAU,oBAAUY,IATH;AAUjBlB,aAAW,oBAAUkB,IAVJ;AAWjBV,eAAa,oBAAUM,MAXN;AAYjBJ,QAAM,oBAAUI,MAZC;AAajBL,SAAO,oBAAUU;AAbA,C;kBA2EN/B,S","file":"TextInput.js","sourcesContent":["/* eslint-disable react/require-default-props */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport InputLabel from './InputLabel';\n\nclass TextInput extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    errorText: PropTypes.node,\n    tooltip: PropTypes.string,\n    disabled: PropTypes.bool,\n    name: PropTypes.string,\n    isNumericOnly: PropTypes.bool,\n    label: PropTypes.string,\n    hasFocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    placeholder: PropTypes.string,\n    type: PropTypes.string,\n    value: PropTypes.any,\n  }\n\n  handleKeyDown = (e) => {\n    if (this.props.isNumericOnly) {\n      if (!(\n        e.metaKey || // cmd/ctrl\n        e.key in ['ArrowRight', 'ArrowLeft'] || // arrow keys\n        e.which === 8 || // delete key\n        /[0-9]/.test(String.fromCharCode(e.which)) // numbers\n      )) {\n        e.preventDefault();\n      }\n    }\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  }\n\n  render() {\n    const {\n      className,\n      errorText,\n      tooltip,\n      name,\n      label,\n      onChange,\n      isNumericOnly,\n      hasFocus,\n      placeholder,\n      value,\n      type,\n      ...rest\n    } = this.props;\n\n    const showPlaceholder = (hasFocus && !value) ? placeholder : null;\n\n    return (\n      <div className=\"input__container text__container\">\n        <input\n          className={cx(['text', className])}\n          name={name}\n          type={type}\n          onChange={onChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={showPlaceholder}\n          value={value}\n          {...rest}\n        />\n        {type !== 'hidden' && <InputLabel\n          className={'text__label'}\n          active={!!value}\n          name={name}\n          label={label}\n          errorText={errorText}\n          tooltip={tooltip}\n        />}\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n"]}