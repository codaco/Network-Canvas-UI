{"version":3,"sources":["../../src/components/Node.js"],"names":["Node","labelText","unit","increment","prevProps","label","props","inactive","selected","placeholder","classes","propTypes","bool","string","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;IAIMA,I;;;;;;;;;;;wCAEgB;AAClB,oCAAe,KAAKC,SAApB,EAA+B,EAAEC,MAAM,IAAR,EAAcC,WAAW,MAAzB,EAA/B;AACD;;;uCAEkBC,S,EAAW;AAC5B,UAAIA,UAAUC,KAAV,KAAoB,KAAKC,KAAL,CAAWD,KAAnC,EAA0C;AACxC,sCAAe,KAAKJ,SAApB,EAA+B,EAAEC,MAAM,IAAR,EAAcC,WAAW,MAAzB,EAA/B;AACD;AACF;;;6BAEQ;AAAA;;AAAA,mBAKH,KAAKG,KALF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,WAJK,UAILA,WAJK;;;AAOP,UAAMC,UAAU,0BACd,MADc,EAEd;AACE,0BAAkBH,QADpB;AAEE,0BAAkBC,QAFpB;AAGE,6BAAqBC;AAHvB,OAFc,CAAhB;;AASA,UAAMJ,QAAQI,cAAc,GAAd,GAAoB,KAAKH,KAAL,CAAWD,KAA7C;;AAEA,aACE;AAAA;AAAA,UAAK,WAAWK,OAAhB;AACE;AAAA;AAAA;AACE,qBAAQ,eADV;AAEE,mBAAM,4BAFR;AAGE,mBAAM,KAHR;AAIE,oBAAO,KAJT;AAKE,uBAAU;AALZ;AAOE,oDAAQ,cAAa,oBAArB,EAA0C,IAAG,GAA7C,EAAiD,IAAG,GAApD,EAAwD,GAAE,GAA1D,EAA8D,WAAU,uBAAxE,GAPF;AAQE,oDAAQ,IAAG,GAAX,EAAe,IAAG,GAAlB,EAAsB,GAAE,GAAxB,EAA4B,MAAK,QAAjC,EAA0C,WAAU,iBAApD,GARF;AASE;AACE,uBAAU,kBADZ;AAEE,eAAE,4BAFJ;AAGE,kBAAK,MAHP;AAIE,uBAAU;AAJZ,YATF;AAeE,oDAAQ,cAAa,oBAArB,EAA0C,IAAG,GAA7C,EAAiD,IAAG,GAApD,EAAwD,GAAE,GAA1D,EAA8D,WAAU,iBAAxE;AAfF,SADF;AAkBE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AAAA;AAAA,cAAK,WAAU,kBAAf,EAAkC,KAAK,aAACT,SAAD,EAAe;AAAE,uBAAKA,SAAL,GAAiBA,SAAjB;AAA6B,eAArF;AAAwFI;AAAxF;AADF;AAlBF,OADF;AAwBD;;;;;;AAGHL,KAAKW,SAAL,GAAiB;AACfJ,YAAU,oBAAUK,IADL;AAEfP,SAAO,oBAAUQ,MAFF;AAGfL,YAAU,oBAAUI,IAHL;AAIfH,eAAa,oBAAUG;AAJR,CAAjB;;AAOAZ,KAAKc,YAAL,GAAoB;AAClBP,YAAU,KADQ;AAElBF,SAAO,MAFW;AAGlBG,YAAU,KAHQ;AAIlBC,eAAa;AAJK,CAApB;;kBAOeT,I","file":"Node.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport scaleTextToFit from '../utils/scaleTextToFit';\n\n/**\n  * Renders a Node.\n  */\n\nclass Node extends Component {\n\n  componentDidMount() {\n    scaleTextToFit(this.labelText, { unit: 'em', increment: 0.0005 });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.label !== this.props.label) {\n      scaleTextToFit(this.labelText, { unit: 'em', increment: 0.0005 });\n    }\n  }\n\n  render() {\n    const {\n      inactive,\n      selected,\n      placeholder,\n    } = this.props;\n\n    const classes = classNames(\n      'node',\n      {\n        'node--inactive': inactive,\n        'node--selected': selected,\n        'node--placeholder': placeholder,\n      },\n    );\n\n    const label = placeholder ? '+' : this.props.label;\n\n    return (\n      <div className={classes}>\n        <svg\n          viewBox=\"-1.5 -1.5 3 3\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"100\"\n          height=\"100\"\n          className=\"node__node\"\n        >\n          <circle vectorEffect=\"non-scaling-stroke\" cx=\"0\" cy=\"0\" r=\"1\" className=\"node__node-outer-trim\" />\n          <circle cx=\"0\" cy=\"0\" r=\"1\" fill=\"silver\" className=\"node__node-base\" />\n          <path\n            className=\"node__node-flash\"\n            d=\"M -1 0 A 0.2,0.2 0 1,1 1,0\"\n            fill=\"grey\"\n            transform=\"rotate(135)\"\n          />\n          <circle vectorEffect=\"non-scaling-stroke\" cx=\"0\" cy=\"0\" r=\"1\" className=\"node__node-trim\" />\n        </svg>\n        <div className=\"node__label\">\n          <div className=\"node__label-text\" ref={(labelText) => { this.labelText = labelText; }}>{label}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nNode.propTypes = {\n  inactive: PropTypes.bool,\n  label: PropTypes.string,\n  selected: PropTypes.bool,\n  placeholder: PropTypes.bool,\n};\n\nNode.defaultProps = {\n  inactive: false,\n  label: 'Node',\n  selected: false,\n  placeholder: false,\n};\n\nexport default Node;\n"]}