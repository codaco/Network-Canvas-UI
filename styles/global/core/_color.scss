// Color setter and mixins
// =============================================================================
$-color-map: () !default;
$-color-alpha-map: (0.1, 0.15, 0.3, 0.6, 0.8, 1) !default;

@mixin color-set($color-name, $color-value) {
  $-color-map: map-merge($-color-map, ($color-name: $color-value)) !global;
}

@function color($color-name, $alpha: 1) {
  $color: #FFFFFF;
  @if index($-color-alpha-map, $alpha)==null {
    @warn "color: Only use #{$-color-map-alpha} for alpha values.";
  }
  @if map-has-key($-color-map, $color-name) {
    $color: map-get($-color-map, $color-name);
    @return rgba($color, $alpha);
  } @else {
    @return $color;
  }
}

@mixin color-modifiers($include-hover: false) {
  @each $color-name, $color-group in $-color-map {
    @include modifier($color-name) {
      background-color: color($color-name);

      @if $include-hover {
        &:hover {
          background-color: color($color-name, 0.8);
        }
      }
    }
  }
}

// TO DO : CLEAN UP
// Core pallette

$network-canvas-coral: #e2215b;
$mustard: #f2b700;
$light-sea-green: #00c9a2;
$white: #fff;
$slate-blue: #6b72ec;
$navy-taupe: #2d2955;
$cyber-grape: #3a3a75;
$rich-black: #16152b;

$sea-serpent: #0fb2e2;
$purple-pizazz: #d30fef;
$paradise-pink: #ff3a8c;
$cerulean-blue: #0f70ff;
$kiwi: #70bf54;
$neon-carrot: #f7891e;
$barbie-pink: #ed008c;
$tomato: #e82d3f;

$charcoal: #6d6f76;
$platinum: #f2f6f7;
$divider: #f2f2f2;
$dark-platinum: #dae3e5;

$roles: (
  'node': $network-canvas-coral,
  'edge': $mustard,
  'primary': $light-sea-green,
  'menu': $white,
  'selected': $white,
  'settings': $slate-blue,
  'background': $navy-taupe,
  'text': $white,
  'tex-muted': $cyber-grape,
  'link': $network-canvas-coral,
  'light-background': $cyber-grape,
  'dark-background': $rich-black,
  'headings': $white,
  'menu-headings': $charcoal
);

// Collections
$nodes: (
  default: (
    base:   map-get($roles, node),
    dark:   darken(map-get($roles, node), 5%)
  )
);

$edges: (
  default: (
    base:   map-get($roles, edge),
    dark:   darken(map-get($roles, edge), 5%)
  )
);

@function node-palette($palette: 'default', $tone: 'base') {
  @return map-get(map-get($nodes, $palette), $tone);
}


@function palette($role) {
  @return map-get($roles, $role);
}

a {
  color: node-palette(default);

  &:hover {
    color: node-palette(default, dark);
  }
}
